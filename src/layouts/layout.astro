---
import { ViewTransitions } from "astro:transitions";
import Header from "~/components/header.astro";
import { HeaderMenuConfig } from "~/components/states/router";

interface Props {
  active: number;
}

const { active } = Astro.props;

const title: string = HeaderMenuConfig[active].name;
---

<!doctype html>
<html lang="en" transition:animate="none">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Symbols+Rounded"
      rel="stylesheet"
    />
    <link
      href="https://fonts.googleapis.com/css2?family=Open%20Sans:wght@400;500;700&display=swap"
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>

    <script>
      import {
        applyTheme,
        argbFromHex,
        themeFromSourceColor,
      } from "@material/material-color-utilities";

      // Get the theme from a hex color
      const theme = themeFromSourceColor(argbFromHex("#29aae0"));

      // Print out the theme as JSON
      //   console.log(JSON.stringify(theme, null, 2));

      // Check if the user has dark mode turned on
      const systemDark =
        window.matchMedia("(prefers-color-scheme: dark)").matches ||
        document.querySelector(".dark") !== null;

      // Apply the theme to the body by updating custom properties for material tokens
      applyTheme(theme, { target: document.body, dark: systemDark });
    </script>
    <ViewTransitions />
  </head>
  <body class="relative bg-[var(--md-sys-color-background)]">
    <Header transition:persist active={active} />
    <main
      class="relative h-100dvh overflow-y-auto px-8 py-8 lg:px-60 md:px-40"
      transition:animate="slide"
    >
      <slot />
    </main>
    <style is:global>
      @import url("/src/styles/global.css");
    </style>
  </body>
</html>
