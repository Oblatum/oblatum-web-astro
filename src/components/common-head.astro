---
import { ViewTransitions } from "astro:transitions";

interface Props {
  title: string;
}
const { title } = Astro.props;
---

<meta charset="UTF-8" />
<meta name="description" content="Astro description" />
<meta name="viewport" content="width=device-width" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link
  href="https://fonts.googleapis.com/icon?family=Material+Symbols+Rounded"
  rel="stylesheet"
/>
<link
  href="https://fonts.googleapis.com/css2?family=Open%20Sans:wght@400;500;700&display=swap"
  rel="stylesheet"
/>
<meta name="generator" content={Astro.generator} />
<title>{title}</title>

<script>
  import {
    applyTheme,
    argbFromHex,
    themeFromSourceColor,
  } from "@material/material-color-utilities";

  // Get the theme from a hex color
  const theme = themeFromSourceColor(argbFromHex("#29aae0"));

  // Print out the theme as JSON
  //   console.log(JSON.stringify(theme, null, 2));

  // Check if the user has dark mode turned on
  const systemDark =
    window.matchMedia("(prefers-color-scheme: dark)").matches ||
    document.querySelector(".dark") !== null;

  // Apply the theme to the body by updating custom properties for material tokens
  applyTheme(theme, { target: document.body, dark: systemDark });
</script>

<ViewTransitions />
